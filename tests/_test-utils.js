'use strict'

process.env.TEST  = true

const {
  promisify,
  inspect, }        = require( 'util' )
const Nightmare     = require( 'nightmare' )
const realMouse     = require( 'nightmare-real-mouse' )
const child_process = require( 'child_process' )
const exec          = promisify( child_process.exec )
const path          = require( 'path' )
const c             = require( 'chalk' )

const { defer }     = require( '../server/helpers' )
const config        = require( '../server/config')
const testDatas     = path.join( __dirname, './sql-test.sqlc' )

const dbTest        = `postgres://localhost:5432/mosaico-backend-test`

// found that it is less prone to errors
realMouse( Nightmare )

////////
// SHARED FUNCTIONNAL THINGS
////////

const setupServer = _ => {
  const server      = require( '../server')()
  // this is needed for end all the processes generated by the server
  // in order for the tape cli to launch the next test if needed
  const stopServer  = async _ => {
    const dfd = defer()
    const app = await server
    app.shutdown()
    app.on( 'shutdown', dfd.resolve )
    return dfd
  }

  return {
    serverReady: server,
    stopServer,
  }
}

async function resetDB() {
  const command = `pg_restore --clean --if-exists --dbname=${dbTest} ${testDatas}`
  await exec( command )
  console.log( c.blue('[TEST]'), `DB setup has been done` )
}

function setupNightmare(show = false)  {

  const nightmare = Nightmare({
    show,
    waitTimeout: 10000,
  }).viewport(1280, 780)

  const closeNightmare = () => nightmare.halt()

  return { nightmare, closeNightmare }

}

const createTest = (plan, showNightmare = false, cb) => async t => {
  t.plan( plan )
  const { nightmare, closeNightmare } = setupNightmare( showNightmare )
  try {
    await cb(t, nightmare, closeNightmare)
  } catch(err) {
    await closeNightmare()
    t.end(err)
  }
}

const connectUser = (email = 'p@p.com', password = 'p' ) => nightmare => {
  return nightmare
  .goto( `http://${ config.host }?lang=en` )
  .insert( '#email-field', email )
  .insert( '#password-field', password )
  .realClick( 'form[action*="/login"] [type=submit]' )
  .wait( '.js-filter' )
}

const connectAdmin = _ => nightmare => {
  return nightmare
  .goto( `http://${ config.host }/admin?lang=en` )
  .insert('#password-field', 'admin')
  .realClick('form[action*="/login"] [type=submit]')
  .wait('.js-admin-home')
}

////////
// EXPORTS
////////

module.exports = {
  setupServer,
  resetDB,
  createTest,
  // nightmare common routines
  connectUser,
  connectAdmin,
}
